From 226fc79e614ae38b0e985a9e06227183da8964b0 Mon Sep 17 00:00:00 2001
From: Alexander Grund <alexander.grund@tu-dresden.de>
Date: Tue, 3 Nov 2020 12:43:54 +0100
Subject: [PATCH 2/7] Add use_default_shell_env = True to all
 ctx.actions.run_shell rules

To compile flatbuffers definition Bazel starts the  flatbuffers compiler
flatc which is potentially built using a custom
toolchain and hence requires a set up LD_LIBRARY_PATH.
Ommitting the `use_default_shell_env` (defaulting to false) clears the
whole environment and the binary may try to use older system libs such
as /lib64/libstdc++.so causing it to fail in case it is (much) older
than the used libstdc++ from the custom toolchain which is very common
in HPC environments.
Hence I added `use_default_shell_env = True` as already done in e.g.
`_local_genrule_impl`.
---
 third_party/flatbuffers/build_defs.bzl | 1 +
 third_party/nccl/build_defs.bzl.tpl    | 1 +
 2 files changed, 2 insertions(+)

diff --git a/third_party/flatbuffers/build_defs.bzl b/third_party/flatbuffers/build_defs.bzl
index d409f836cb0..754db3f5d86 100644
--- a/third_party/flatbuffers/build_defs.bzl
+++ b/third_party/flatbuffers/build_defs.bzl
@@ -394,6 +394,7 @@ def _concat_flatbuffer_py_srcs_impl(ctx):
             ctx.attr.deps[0].files.to_list()[0].path,
             ctx.outputs.out.path,
         ),
+        use_default_shell_env = True,
     )
 
 _concat_flatbuffer_py_srcs = rule(
diff --git a/third_party/nccl/build_defs.bzl.tpl b/third_party/nccl/build_defs.bzl.tpl
index ceb65e3b632..b1c16cf9f5e 100644
--- a/third_party/nccl/build_defs.bzl.tpl
+++ b/third_party/nccl/build_defs.bzl.tpl
@@ -236,6 +236,7 @@ def _merge_archive_impl(ctx):
         inputs = ctx.files.srcs,  # + ctx.files._crosstool,
         outputs = [ctx.outputs.out],
         command = "echo -e \"%s\" | %s -M" % (mri_script, cc_toolchain.ar_executable),
+        use_default_shell_env = True,
     )
 
 _merge_archive = rule(
-- 
2.31.1

